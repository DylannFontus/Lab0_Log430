name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint
          pip install pylint-django

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)/src" >> $GITHUB_ENV

      - name: Lint code
        run: |
          pylint $(find src -name "*.py" ! -name "tests.py") \
            --load-plugins=pylint_django \
            --fail-under=5.0

  test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: docker compose up -d --build

      - name: Wait for MySQL to be healthy
        run: |
          for i in {1..30}; do
            if docker-compose exec db mysqladmin ping -h "localhost" -u"$DB_USER" -p"$DB_PASSWORD" --silent; then
              echo "MySQL is ready"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done
      - name: Run database setup command
        run: docker compose exec web python manage.py test_db

      - name: Run tests inside the app container
        run: docker compose exec web pytest

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/helloworld:latest
