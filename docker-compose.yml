services:
  web:
    build: .
    depends_on:
      - db
    restart: unless-stopped
    environment:
      PYTHONPATH: /app/src
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: 3306
      DJANGO_SETTINGS_MODULE: pos_django.settings
      ALLOWED_HOSTS: 'web, nginx, localhost, 127.0.0.1, *'
      APP_REPLICAS: ${APP_REPLICAS:-2}
    networks:
      - backend
  db:
    image: mysql:9.3
    container_name: mon-db-container
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend
  
  prometheus:
    image: prom/prometheus:latest
    user: root  
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - '9090:9090'
    restart: unless-stopped
    networks:
      - backend

  grafana:
    image: grafana/grafana:9.5.0
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
      GF_USERS_ALLOW_SIGN_UP: 'false'
      
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - backend
  
  redis:
    image: redis:latest
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
  
  nginx:
    image: nginx:latest
    ports:
      - '5000:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - backend

volumes:
  mysql_data:
  grafana_data:

networks:
  backend:
    driver: bridge
